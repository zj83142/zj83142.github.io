{"title":"zj83142","description":null,"language":"zh-Hans","link":"http://yoursite.com","pubDate":"Mon, 06 Nov 2017 08:36:48 GMT","lastBuildDate":"Tue, 07 Nov 2017 07:47:42 GMT","generator":"hexo-generator-json-feed","webMaster":"情深·缘浅","items":[{"title":"web 前端优化策略","link":"http://yoursite.com/2017/11/06/note/web-optimization/","description":"前端优化的目的： 从用户角度讲，优化能够让页面加载的更快，用户体验更好。 从服务商角度讲，优化能够减少页面请求数、或者减少请求所占带宽，能够节省资源。 PC浏览器优化策略有很多前端优化主要包括： 网络加载类、页面渲染类、CSS优化类、Javascript执行类、缓存类、图片类、构架协议类……","pubDate":"Mon, 06 Nov 2017 08:36:48 GMT","guid":"http://yoursite.com/2017/11/06/note/web-optimization/","category":"前端优化"},{"title":"javascript中的一些概念","link":"http://yoursite.com/2017/10/30/js/js-concept/","description":"setTimeout 和 seIntervaljavascript是单线程，所以setTimeout和setInterval两个函数是利用代码插入的方式实现伪异步，和Ajax的原理实际上是一样的。123456function fn() &#123; setTimeout(function()&#123;alert(&apos;can you see me?&apos;);&#125;,1000); while(true) &#123; &#125; &#125; 上面代码很清楚的说明了这个问题，alert永远不会执行，因为while这段代码没有执行完成。 变量声明123456789var name = 'World';(function() &#123; if(typeof name === 'undefined') &#123; var name = 'Jack'; console.log('Goodbey ' + name); &#125; else &#123; console.log('Hello ' + name); &#125;&#125;)(); 控台打印的正确结果是：Goodbye jack, 上面代码其实相当于：12345678910var name = 'World';(function() &#123; var name; if(typeof name === 'undefined') &#123; name = 'Jack'; console.log('Goodbye ' + name); &#125; else &#123; console.log('Hello ' + name); &#125;&#125;)();","pubDate":"Mon, 30 Oct 2017 07:09:21 GMT","guid":"http://yoursite.com/2017/10/30/js/js-concept/","category":"笔记"},{"title":"git 常用命令积累","link":"http://yoursite.com/2017/10/26/tools/git-command/","description":"日常工作中常用的git命令积累 修改远程仓库地址 1234git remote set-url origin [url] 或git remote rm origingit remote add origin [url] 使用 git remote -v 查看当前远程仓库地址","pubDate":"Thu, 26 Oct 2017 06:36:28 GMT","guid":"http://yoursite.com/2017/10/26/tools/git-command/","category":"笔记"},{"title":"webpack 学习笔记","link":"http://yoursite.com/2017/10/24/tools/webpack/","description":"git上的一个webpack配置案例 webpack 是什么？ Webpack就是个模块打包工具，将模块及其依赖打包生成静态资源。在Webpack的机制里，所有的资源都是模块(js,css,图片等)，而且可以通过代码分隔(Code Splitting)的方法异步加载，实现性能上的优化。","pubDate":"Tue, 24 Oct 2017 01:32:03 GMT","guid":"http://yoursite.com/2017/10/24/tools/webpack/","category":"笔记"},{"title":"2017年10月工作笔记和感受","link":"http://yoursite.com/2017/10/23/work/2017-10/","description":"精益求精，不是浅尝辄止对自己要求越高，进步越快。反思了一下这几年工作下来好像能力并没有什么提高，","pubDate":"Mon, 23 Oct 2017 01:39:47 GMT","guid":"http://yoursite.com/2017/10/23/work/2017-10/","category":"笔记"},{"title":"sublime 使用","link":"http://yoursite.com/2017/10/17/tools/sublime/","description":"sublime 安装插件 查看sublime的插件列表 Ctrl+Shift+P 输入：list packages 大部分插件安装步骤： 在sublime中打开PackageControl, 快捷键：Ctrl+Shift+P 打开Install Package 窗口，直接输入 install package 按回车 弹出安装插件框，输入 vue 找到 xxx 按回车 重新打开文件或重启sublime","pubDate":"Tue, 17 Oct 2017 02:35:40 GMT","guid":"http://yoursite.com/2017/10/17/tools/sublime/","category":"笔记"},{"title":"echart踩坑","link":"http://yoursite.com/2017/10/10/note/echart-pits/","description":"记录echarts使用过程中遇到的那些坑 x轴数据是字符串日期格式且不连续时，间隔问题 刚开始遇到这个需求的时候感觉要从数据上处理，数据处理成连续的日期，没有的补0，后台人员说太后台补数据，后来才发现，前端果然强大，只有你想不到的，没有做不到的，默默的告诉自己，虽然我不是专业的前端开发，但是英雄不问出处，我可以通过努力和积累变得专业。以后遇到问题切忌不可轻易言弃！！！！！！","pubDate":"Tue, 10 Oct 2017 08:00:30 GMT","guid":"http://yoursite.com/2017/10/10/note/echart-pits/","category":"echart"},{"title":"python安装类库","link":"http://yoursite.com/2017/10/10/python/install-libs/","description":"在win7平台上安装gevent和gevent-socketio在Linux平台上安装gevent就是几个命令的事情, 有了gcc之类的编译环境很快就可以搞定, 但是windows上要编译什么的就麻烦太多了 gevent依赖greenlet, 从源码安装的话, 还需要cython的支持和编译libev. 而greenlet在windows平台上则需要编译libevent. 因此我们至少需要: libevent的dll文件 greenlet的免编译安装包 gevent的免编译安装包","pubDate":"Tue, 10 Oct 2017 07:54:23 GMT","guid":"http://yoursite.com/2017/10/10/python/install-libs/","category":"python安装类库"},{"title":"python安装类库","link":"http://yoursite.com/2017/10/10/install-libs/","description":"在win7平台上安装gevent和gevent-socketio在Linux平台上安装gevent就是几个命令的事情, 有了gcc之类的编译环境很快就可以搞定, 但是windows上要编译什么的就麻烦太多了 gevent依赖greenlet, 从源码安装的话, 还需要cython的支持和编译libev. 而greenlet在windows平台上则需要编译libevent. 因此我们至少需要:","pubDate":"Tue, 10 Oct 2017 07:54:23 GMT","guid":"http://yoursite.com/2017/10/10/install-libs/","category":"python安装类库"},{"title":"日常踩坑集合(一)","link":"http://yoursite.com/2017/10/10/note/daily-pit1/","description":"解决目录层次太深删除报错的问题问题：在使用npm当中，自动生成的node_modules文件夹，因为文件目录层级太深，无法系统删除 解决方案： 1、 安装：npm install -g rimraf（全局安装） 2、 使用：先定位目标文件夹的父级目录，然后命令行输入rimraf （为需要删除的文件夹名称）","pubDate":"Tue, 10 Oct 2017 07:51:04 GMT","guid":"http://yoursite.com/2017/10/10/note/daily-pit1/","category":"踩坑"},{"title":"css-loadding 效果积累","link":"http://yoursite.com/2017/10/10/css/loadding/","description":"在日常中遇到的感觉不错的loading效果，先积累起来，有时间好好看看具体是如何实现的。","pubDate":"Tue, 10 Oct 2017 07:29:08 GMT","guid":"http://yoursite.com/2017/10/10/css/loadding/","category":"CSS"},{"title":"css 性能优化","link":"http://yoursite.com/2017/09/28/css/css-optimization/","description":"css优化空间很大，对性能的影响也很大。事实上大部分复杂的页面完全不修改javascript代码，可以通过css的优化大幅提升render performance。这就需要我们对css的渲染有更深入的了解。css优化可以从加载性能、选择器性能、渲染性能、可维护性，健壮性方面入手…","pubDate":"Thu, 28 Sep 2017 06:51:46 GMT","guid":"http://yoursite.com/2017/09/28/css/css-optimization/","category":"CSS"},{"title":"vue 学习笔记 —— 安装","link":"http://yoursite.com/2017/09/21/vue/vue-learn1/","description":"最近由于Facebook的专利问题，百度已经宣布停用一切React软件产品，React开发人员甚是惊慌。Facebook到目前为止拒绝修改React的开源许可条款。虽然还不确定最终的结果，但是学习一下新的知识也是有备无患的，就是不知道vue过阵子是不是也会爆出来侵权or专利问题。悲催的前端工程师……","pubDate":"Thu, 21 Sep 2017 02:03:05 GMT","guid":"http://yoursite.com/2017/09/21/vue/vue-learn1/","category":"vue"},{"title":"js 问题积累","link":"http://yoursite.com/2017/09/20/js/js-pits/","description":"工作中遇到一些问题，虽然最后解决了，但是过一段时间可能又忘了，再遇到又要去查资料。觉得很有必要记录下来。","pubDate":"Wed, 20 Sep 2017 07:35:48 GMT","guid":"http://yoursite.com/2017/09/20/js/js-pits/","category":"js,dropzone,datetimepicker,js下载文本"},{"title":"js 随机颜色的三种方式和颜色格式的转化","link":"http://yoursite.com/2017/09/13/js/generate-color/","description":"生成随机颜色十六进制格式（#000000-#FFFFFF）1234567function randomHexColor() &#123; let hex = Math.floor(Math.random() * 16777216).toString(16); // 生成ffffff以内16进制数 while (hex.length &lt; 6) &#123; //while循环判断hex位数，少于6位前面加0凑够6位 hex = &apos;0&apos; + hex; &#125; return &apos;#&apos; + hex; //返回‘#’开头16进制颜色&#125;","pubDate":"Wed, 13 Sep 2017 06:04:28 GMT","guid":"http://yoursite.com/2017/09/13/js/generate-color/","category":"js"},{"title":"链接积累","link":"http://yoursite.com/2017/09/13/links/","description":"平时遇到的各种素材，将链接收录一下……","pubDate":"Wed, 13 Sep 2017 05:52:13 GMT","guid":"http://yoursite.com/2017/09/13/links/","category":"素材"},{"title":"js类型检测","link":"http://yoursite.com/2017/09/12/js/js-check-type/","description":"js 判断数据类型的方法 根据数据类型判断 typeof instaneof 根据构造函数判断 Object.prototype.toString construcor","pubDate":"Tue, 12 Sep 2017 06:59:00 GMT","guid":"http://yoursite.com/2017/09/12/js/js-check-type/","category":"类型检测"},{"title":"积累一些常见的面试题","link":"http://yoursite.com/2017/09/11/note/web-interview1/","description":"前端安全与防范 XSS: 跨站脚本攻击 说明：它允许用户讲恶意代码植入到提供给其他用户使用的页面中，可以简单的理解为一种Javascript代码注入。 预防措施： 过滤转义输入输出 避免使用eval、new Function 等执行字符串的方法，除非确定字符串和用户输入五官 使用cookie的httpOnly属性，加上了这个属性的cookie字段，js是无法进行读写的 使用innerHtml、document.write的时候，如果数据是用户输入的，那么需要对关键字符进行过滤与转义","pubDate":"Mon, 11 Sep 2017 08:36:48 GMT","guid":"http://yoursite.com/2017/09/11/note/web-interview1/","category":"前端技能"},{"title":"编程命名规范","link":"http://yoursite.com/2017/09/06/named-rule/","description":"编程中，能很好的命名变量、方法名、类名，起到见名之意尤其困难。积累一些常用的命名规范。 List 定义的变量应该List作为后缀结尾 Map 定义的变量应该Map作为后缀结尾 数组定义的变量应该s作为后最结尾 类成员变量用m开头 大小写尽量统一， - _ 尽量统一 常量使用大写 不要使用过长的变量名，也不要用单词首字母缩写（根本猜不到是什么意思）","pubDate":"Wed, 06 Sep 2017 02:27:21 GMT","guid":"http://yoursite.com/2017/09/06/named-rule/","category":"笔记"},{"title":"css_selector","link":"http://yoursite.com/2017/09/05/css/css-selector/","description":"","pubDate":"Tue, 05 Sep 2017 13:48:56 GMT","guid":"http://yoursite.com/2017/09/05/css/css-selector/","category":"CSS"},{"title":"hexo 笔记 —— 遇到的问题","link":"http://yoursite.com/2017/09/05/tools/hexo-note/","description":"hexo 博客在家里电脑clone了一份，npm install 了所有的安装包后运行不起来，遇到了一些列的问题，记录一下，方便以后回顾。 hexo s 后报错 没有找到 layout index.html。原因是从git上clone下来的项目themes文件夹是空的，重新安装next主题：git clone https://github.com/iissnan/hexo-theme-next themes/next","pubDate":"Tue, 05 Sep 2017 13:36:36 GMT","guid":"http://yoursite.com/2017/09/05/tools/hexo-note/","category":"笔记"},{"title":"Hexo + github pages 搭建个人博客 —— 设置篇","link":"http://yoursite.com/2017/09/05/tools/hexo_github_pages2/","description":"","pubDate":"Tue, 05 Sep 2017 02:27:16 GMT","guid":"http://yoursite.com/2017/09/05/tools/hexo_github_pages2/","category":""},{"title":"hexo 主题设置","link":"http://yoursite.com/2017/08/25/tools/hexo-them/","description":"next主题1.安装 hexo-theme-next 到 themes/next文件夹下 1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 2.启用主题 _config.yml 文件下修改 theme: next (默认 theme: landscape)","pubDate":"Fri, 25 Aug 2017 02:26:24 GMT","guid":"http://yoursite.com/2017/08/25/tools/hexo-them/","category":"笔记"},{"title":"Hexo + github pages搭建个人博客 —— 基础篇","link":"http://yoursite.com/2017/08/24/tools/hexo_github_pages1/","description":"Hexo 确实是一个神奇的好东西，通过Hexo和github搭配就能生成完美的个人博客，还有丰富的主题样式可以选择。不用自己管理服务器，是不是很酷？以下记录了我搭建博客的步骤和搭建过程中遇到的一些问题。 学习不能含糊，不能似是而非，要有打破砂锅问到底的精神！","pubDate":"Thu, 24 Aug 2017 07:27:22 GMT","guid":"http://yoursite.com/2017/08/24/tools/hexo_github_pages1/","category":"笔记"}]}